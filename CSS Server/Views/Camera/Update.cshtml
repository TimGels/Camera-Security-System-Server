@using CSS_Server.ViewModels
@using CSS_Server.Models
@using Microsoft.AspNetCore.Mvc.ModelBinding

@{
    Layout = "_Layout";

//This function is used to show validation errors for a given property.
    void ErrorHelper(string propertyName)
    {
        //If the already posted property is not set, It's the first time the view will be showed to the user.
        //In that case we do not want to show any error messages.
        if (!ViewData.TryGetValue("AlreadyPosted", out object alreadyPosted) || !(bool)alreadyPosted)
            return;

        //If there is no modalState entry for the given prop, return.
        @if (!ViewData.ModelState.TryGetValue(propertyName, out ModelStateEntry value))
            return;

        @if(value.Errors.Count > 0)
        {
            //Foreach error add a span to the dom.
            @foreach (ModelError error in value.Errors)
            {
                <span class="validationError">@error.ErrorMessage</span>
            }
        }
    }
}

@model UpdateCameraViewModel

<main class="main_form">
    <form action="#" method="post">
        <h1>
            Update @ViewData["cameraName"]
        </h1>

        <div class="inputBox">
            <label for="Name">Name</label>
            <input asp-for="Name" name="Name" type="text" value="@Model.Name">
            @{ ErrorHelper("Name"); }
        </div>

        <div class="inputBox">
            <label for="Description">Description</label>
            <input asp-for="Description" name="Description" type="text" value="@Model.Description">
            @{ ErrorHelper("Description"); }
        </div>

        <div class="inputBox">
            <label for="ChangePassword">Wanna change password?</label>
            <input asp-for="ChangePassword" name="ChangePassword" type="checkbox" value="false">
        </div>

        <div class="inputBox" data-name="password">
            <label for="password">Password</label>
            <input asp-for="Password" name="password" type="password" value="@Model.Password">
            @{ ErrorHelper("Password"); }
        </div>

        <div class="inputBox" data-name="retypePassword">
            <label for="RetypePassword">Retype Password</label>
            <input asp-for="RetypePassword" name="RetypePassword" type="password" value="@Model.RetypePassword">
            @{
                ErrorHelper("RetypePassword");
            }
        </div>

        <input type="submit" value="Update Camera">
    </form>
</main>

<script>
//Get the different passwordboxes
var passwordBox = document.querySelector(".inputBox[data-name='password']");
var retypePasswordBox = document.querySelector(".inputBox[data-name='retypePassword']");

//get the changepassword checkbox
var changePassword = document.querySelector("input[name='ChangePassword']");

//Define a function for changing the display of the password boxes based on the checkbox
function setPasswordDisplay(){
    if(changePassword.checked){
        passwordBox.style.display = 'block';
        retypePasswordBox.style.display = 'block';
        changePassword.value = "true";
    } else {
        passwordBox.style.display = 'none';
        retypePasswordBox.style.display = 'none';
        changePassword.value = "false";
    }
}

//add an event listener on the changePassword checkbox so that fields can be hidden or showed.
changePassword.addEventListener('change', setPasswordDisplay);

//set initial display style of the password boxes based on the changedpassword prop in the model:
changePassword.checked = @Json.Serialize(Model.ChangePassword);
setPasswordDisplay();

//Get all inputboxes so that errors can be displayed.
Array.from(document.querySelectorAll(".inputBox")).forEach(function(inputBox){
    //Foreach input box add the keydown event listener.
    inputBox.querySelector("input").addEventListener("keydown", function(){
        //When the keydown event happens, the validationerrors in the inputBox will be removed.
        Array.from(inputBox.querySelectorAll(".validationError")).forEach(function(error){
            error.remove();
        });
    });
});
</script>