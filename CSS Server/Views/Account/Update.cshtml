@using CSS_Server.ViewModels
@using CSS_Server.Models
@using Microsoft.AspNetCore.Mvc.ModelBinding

@{
    Layout = "_Layout";

//This function is used to show validation errors for a given property.
    void ErrorHelper(string propertyName)
    {
        //If the already posted property is not set, It's the first time the view will be showed to the user.
        //In that case we do not want to show any error messages.
        if (!ViewData.TryGetValue("AlreadyPosted", out object alreadyPosted) || !(bool)alreadyPosted)
            return;

        //If there is no modalState entry for the given prop, return.
        @if (!ViewData.ModelState.TryGetValue(propertyName, out ModelStateEntry value))
            return;

        @if(value.Errors.Count > 0)
        {
            //Foreach error add a span to the dom.
            @foreach (ModelError error in value.Errors)
            {
                <span class="validationError">@error.ErrorMessage</span>
            }
        }
    }
}

@model UpdateUserViewModel

<main class="main_form">
    <form action="#" method="post">
        <h1>
            Update user
        </h1>

        <div class="inputBox">
            <label for="UserName">UserName</label>
            <div name="Username">@ViewData["userName"]</div>
        </div>

        <div class="inputBox" data-name="password">
            <label for="password">Password</label>
            <input asp-for="Password" name="password" type="password" value="@Model.Password">
            @{ ErrorHelper("Password"); }
        </div>

        <div class="inputBox" data-name="retypePassword">
            <label for="RetypePassword">Retype Password</label>
            <input asp-for="RetypePassword" name="RetypePassword" type="password" value="@Model.RetypePassword">
            @{
                ErrorHelper("RetypePassword");
            }
        </div>

        <input type="submit" value="Change password">
    </form>
</main>

<script src="~/js/RemoveValidationOnInput.js"></script>